{"version":3,"sources":["components/card/Card.jsx","components/card-list/Card_List.jsx","components/searchBox/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","monsters","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAGaA,EAAO,SAAAC,GAAK,OACjB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACnB,+BAAKL,EAAMI,QAAQE,KAAnB,OACA,4BAAIN,EAAMI,QAAQG,YCDhBC,G,MAAU,SAAAR,GAAK,OACxB,qBAAKC,UAAU,aAAf,SACCD,EAAMI,QAAQK,KAAI,SAAAL,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNdK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAEb,uBACAX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+BPG,E,kDAjCb,aAAc,IAAD,8BACX,gBAWJH,aAAc,SAACI,GACb,EAAKC,SAAS,CAAEC,YAAYF,EAAEG,OAAOC,SAXnC,EAAKC,MAAQ,CACVC,SAAS,GACTJ,YAAY,IAJJ,E,qDAOd,WAAoB,IAAD,OACjBK,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKV,SAAS,CAAEK,SAASK,S,oBAMxC,WAAU,IAAD,EAC2BC,KAAKP,MAA/BC,EADD,EACCA,SAAUJ,EADX,EACWA,YACZW,EAAkBP,EAASQ,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASd,EAAYa,kBAClD,OACE,sBAAK9B,UAAU,MAAf,UACA,mDACI,cAAC,EAAD,CACAU,YAAY,kBACZC,aAAcgB,KAAKhB,eAEnB,cAAC,EAAD,CAAUR,QAAUyB,W,GA5BZI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2323bcd5.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../card/Card.styles.css';\r\n\r\nexport const Card = props =>(\r\n        <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2` }/>\r\n           <h2>{props.monster.name} </h2>\r\n           <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Card } from '../card/Card';\r\nimport './Card_List.styles.css';\r\nimport '../card/Card.styles.css';\r\n\r\n\r\nexport const CardList= props => (\r\n    <div className=\"card-list \">\r\n    {props.monster.map(monster=>( \r\n        <Card key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n  );\r\n","import React from 'react';\r\nimport './SearchBox.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) =>(\r\n        \r\n            <input \r\n            className=\"search\"\r\n            type=\"search\"\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n            /> \r\n     \r\n    );\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/Card_List';\nimport { SearchBox } from './components/searchBox/SearchBox';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n       monsters:[],\n       searchField:\"\",\n    };\n  }\n componentDidMount(){\n   fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(users=> this.setState({ monsters:users }))\n}\nhandleChange =(e)=> {\n  this.setState({ searchField:e.target.value })\n}\n  \n   render() {\n     const { monsters, searchField } = this.state;\n     const filteredMonsters= monsters.filter(monster=> \n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className='App'>\n      <h1>Monster's Rolodex</h1>\n          <SearchBox \n          placeholder=\"search monsters\" \n          handleChange={this.handleChange}\n          />\n          <CardList monster={ filteredMonsters }  />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}